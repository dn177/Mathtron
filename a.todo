Test:
$\mathrm{e} = \sum_{n=0}^{\infty} \dfrac{1}{n!}$
$\dfrac{n!}{k!(n-k)!}$ = $\binom{n}{k}$
110 $\times$ 10 $\ne$ 20
$\frac{1 + 2} {2}$

$n^{2}$ $\iff$ n $\times$ n

TODO:
Remake with vite electron builder: https://github.com/cawa-93/vite-electron-builder
context Menu for cards
prompt user for new notebook name
settings
store with electron-store via Electron IPC instead of localstorage in the main.ts:
webPreferences: {
      nodeIntegration: true,
      preload: app.isPackaged
        ? path.join(__dirname, 'preload.js')
        : path.join(__dirname, '../../.erb/dll/preload.js'),
    },
(x) contenteditable set Cards to localstorage
(x) fix content edit LateX
Sortable:
https://docs.dndkit.com/presets/sortable
https://www.npmjs.com/package/react-sortablejs
https://github.com/SortableJS/react-sortablejs/blob/master/src/react-sortable.tsx
<ReactSortable list={cards} setList={setCards}>   </ReactSortable>
ReactSortable, React Draggable


  // eslint-disable-next-line no-useless-escape


#Context Menu React:
https://www.dhiwise.com/post/how-to-implement-context-menu-react-a-comprehensive-guide

https://blog.logrocket.com/creating-react-context-menu/


LateX Docs:
https://www.latex-project.org/help/documentation/usrguide.pdf


react-latex-next example:
https://codesandbox.io/p/sandbox/react-latex-next-rz50xl?file=%2Fsrc%2FApp.js%3A34%2C2




Legacy:
 <select name="" id="" onChange={selectHandler}>
        {notebooks.map((notebook) => (
          <option value={notebook}>{notebook}</option>
        ))}
        <option value="Create new notebook">Create new notebook</option>
</select>